{"version":3,"sources":["index.js"],"names":["App","props","reset","setState","type","breakLength","sessionLength","timer","timerRunning","clearInterval","loop","audio","current","pause","currentTime","undefined","React","createRef","state","this","setInterval","document","getElementById","style","color","play","id","onClick","breakDec","breakInc","sessionDec","sessionInc","Math","floor","handleSS","ref","preload","src","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.170a2b42.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css'\r\n\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.loop = undefined;\r\n        this.audio = React.createRef();\r\n        this.state = {\r\n            type: 'Session',\r\n            breakLength: 5,\r\n            sessionLength: 25,\r\n            timer: 25 * 60,\r\n            timerRunning: false\r\n        }\r\n    }\r\n    reset = () => {\r\n        this.setState({\r\n            type: 'Session',\r\n            breakLength: 5,\r\n            sessionLength: 25,\r\n            timer: 1500,\r\n            timerRunning: false\r\n        });\r\n        clearInterval(this.loop);\r\n        this.audio.current.pause();\r\n        this.audio.current.currentTime = 0;\r\n    }\r\n    breakDec(){\r\n        if(this.state.breakLength > 1 && this.state.timerRunning === false){\r\n            this.setState({\r\n                breakLength: this.state.breakLength - 1\r\n            });\r\n        }\r\n    }\r\n    breakInc(){\r\n        if(this.state.breakLength < 60 && this.state.timerRunning === false){\r\n            this.setState({\r\n                breakLength: this.state.breakLength + 1\r\n            });\r\n        }\r\n    }\r\n    sessionDec(){\r\n        if(this.state.sessionLength > 1 && this.state.timerRunning === false){\r\n            this.setState({\r\n                sessionLength: this.state.sessionLength - 1,\r\n                timer: this.state.timer - 60\r\n            });\r\n        }\r\n    }\r\n    sessionInc(){\r\n        if(this.state.sessionLength < 60 && this.state.timerRunning === false){\r\n            this.setState({\r\n                sessionLength: this.state.sessionLength + 1,\r\n                timer: this.state.timer + 60\r\n            });\r\n        }\r\n    }\r\n    handleSS(){\r\n        if(this.state.timerRunning){\r\n            clearInterval(this.loop)\r\n            this.setState({\r\n                timerRunning: false\r\n            });\r\n        } else {\r\n            this.setState({\r\n                timerRunning: true\r\n            });\r\n            this.loop = setInterval(() => {\r\n                if(this.state.timer <= 11 && this.state.timer > 0){\r\n                    document.getElementById('time-left').style.color = 'DarkRed';\r\n                } else {\r\n                    document.getElementById('time-left').style.color = 'white';\r\n                }\r\n                if(this.state.timer === 0){\r\n                    this.audio.current.play();\r\n                    this.setState({\r\n                        type: (this.state.type === 'Session') ? 'Break' : 'Session',\r\n                        timer: (this.state.type === 'Session') ? (this.state.breakLength * 60) : (this.state.sessionLength * 60) \r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        timer: this.state.timer - 1\r\n                    });\r\n                }\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"container\">\r\n                <h1 id=\"title\">Pomodoro Clock</h1>\r\n                <div id=\"btn-container\">\r\n                    <div id=\"break-set\">\r\n                        <h3 id=\"break-label\">Break Length</h3>\r\n                        <div id=\"break-decrement\" onClick={() => this.breakDec()}>-</div>\r\n                        <div id=\"break-length\">\r\n                            {this.state.breakLength}\r\n                        </div>\r\n                        <div id=\"break-increment\" onClick={() => this.breakInc()}>+</div>\r\n                    </div>\r\n                    <div id=\"session-set\">\r\n                        <h3 id=\"session-label\">Session Length</h3>\r\n                        <div id=\"session-decrement\" onClick={() => this.sessionDec()}>-</div>\r\n                        <div id=\"session-length\">\r\n                            {this.state.sessionLength}\r\n                        </div>\r\n                        <div id=\"session-increment\" onClick={() => this.sessionInc()}>+</div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"session\">\r\n                <h2 id=\"timer-label\">{this.state.type}</h2>\r\n                    <div id=\"time-left\">\r\n                        {(this.state.timer < 600) ? 0 : ''}\r\n                        {Math.floor(this.state.timer / 60)}:\r\n                        {(this.state.timer % 60 < 10)? 0 : ''}\r\n                        {(this.state.timer  % 60)}\r\n                    </div>\r\n                </div>\r\n                <div id=\"footer\">\r\n                    <div id=\"start_stop\" onClick={() => this.handleSS()}>> / ll</div>\r\n                    <div id=\"reset\" onClick={(this.reset)}>reset</div>\r\n                </div>\r\n                <audio \r\n                ref = {this.audio}\r\n                preload = ''\r\n                type = \"audio/wav\"\r\n                id = 'beep'\r\n                src = 'http://www.peter-weinberg.com/files/1014/8073/6015/BeepSound.wav'></audio>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}